{"version":3,"sources":["store/index.js","component/header/header.jsx","component/footer/footer.jsx","pages/main/main.jsx","utils/check.js","api/ajax.js","pages/login/login.jsx","component/noteItem/noteItem.jsx","pages/home/home.jsx","pages/note/note.jsx","pages/friend/friend.jsx","component/pieChart/pieChart.jsx","pages/me/me.jsx","pages/detail/detail.jsx","pages/publish/publish.jsx","routes/index.js","App.jsx","index.js"],"names":["global","user","name","pwd","uid","tagArr","header","state","ifLogin","handleExit","Modal","confirm","title","okText","cancelText","onOk","props","history","replace","setState","this","className","to","style","display","onClick","Component","withRouter","footer","main","routes","map","r","path","component","exact","checkValIsNull","val","length","BASE","ajax","url","data","type","baseURL","hide","message","loading","Promise","resolve","reject","axios","get","params","post","then","res","catch","err","finally","setTimeout","login","loginModal","imgURL","handleLogin","value","code","console","log","info","toLowerCase","status","msg","error","success","id","push","handleRegister","rname","rpwd","rnpwd","npwd","getCode","document","querySelector","innerHTML","toggleBtn","ref","c","width","Password","iconRender","visible","EyeTwoTone","EyeInvisibleOutlined","size","noteItem","note","author","color","comment","content","date","nid","praise","tag","tid","goDetail","pathname","query","base","Object","getOwnPropertyNames","UserOutlined","MessageOutlined","LikeOutlined","Search","Input","home","tagList","curIndex","noteList","onSearch","key","changeTag","index","reqTagList","reqNoteList","location","placeholder","enterButton","textAlign","columns","dataIndex","render","align","e","handleDelete","showMore","getMyNote","pagination","dataSource","bordered","friend","friendList","friendModal","addFriend","userList","fid","getFriendList","goFriend","toggleModal","searchVal","renderItem","item","Item","actions","preventDefault","Meta","avatar","icon","description","onCancel","pieChart","pieRender","classify","noteTotal","count","chart","Chart","container","autoFit","height","coordinate","radius","tooltip","showMarkers","interval","adjust","position","opacity","active","element","shape","matrix","Util","zoom","label","offset","fill","fontSize","shadowBlur","shadowColor","obj","Math","floor","interaction","nextProps","me","ifEdit","friendCount","getUserBase","saveMsg","undefined","disabled","visibility","detail","commentList","commentVisible","ifPraise","togglePraise","toggleComment","getNoteDetail","a","getComment","handleComment","target","handleEnter","keyCode","commitComment","deleteComment","cid","LikeFilled","cursor","MessageFilled","onKeyDown","onChange","commenter","publish","ifPublish","commitNote","publishNote","handleTag","handleTitle","handleContent","defaultValue","Option","TextArea","autoSize","minRows","maxRows","goBack","mainRoutes","Home","Note","Friend","Me","Detail","Publish","Login","Main","App","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f9cbff17.chunk.js","sourcesContent":["// 存放全局变量\r\nconst global = {\r\n    user: {\r\n        name: '',\r\n        pwd: '',\r\n        uid: -1,\r\n    },\r\n    tagArr: [\r\n        // {\r\n        //     color: \"#2db7f5\",\r\n        //     tag: \"学习\",\r\n        //     tid: 1,\r\n        // },\r\n        // {\r\n        //     color: \"#cf1322\",\r\n        //     tag: \"生活\",\r\n        //     tid: 2,\r\n        // },\r\n        // {\r\n        //     color: \"#87d068\",\r\n        //     tag: \"美食\",\r\n        //     tid: 3,\r\n        // },\r\n        // {\r\n        //     color: \"#333\",\r\n        //     tag: \"其他\",\r\n        //     tid: 4,\r\n        // }\r\n    ]\r\n}\r\n\r\nexport default global;","import React, { Component } from \"react\";\r\nimport { NavLink, withRouter, Link } from \"react-router-dom\";\r\nimport global from \"../../store/index\";\r\nimport { Modal } from \"antd\";\r\nimport \"./header.scss\";\r\n\r\nclass header extends Component {\r\n  state = {\r\n    ifLogin: false,\r\n  };\r\n\r\n  handleExit = () => {\r\n    const { ifLogin } = this.state;\r\n\r\n    Modal.confirm({\r\n      title: \"确认退出\",\r\n      okText: \"确认\",\r\n      cancelText: \"取消\",\r\n      onOk: () => {\r\n        this.props.history.replace(\"/login\");\r\n        global.user.uid = -1;\r\n        global.user.name = '';\r\n        global.user.pwd = '';\r\n        this.setState({ ifLogin: !ifLogin });\r\n      },\r\n    });\r\n  };\r\n\r\n  componentWillMount() {\r\n    const { user } = global;\r\n    if (user.uid !== -1) {\r\n      this.setState({\r\n        ifLogin: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { ifLogin } = this.state;\r\n    return (\r\n      <div className=\"header\">\r\n        <div className=\"logo_wrap\">\r\n          <h1>论坛系统</h1>\r\n          {/* <img src=\"\" alt=\"\" /> */}\r\n        </div>\r\n        <div className=\"nav\">\r\n          <NavLink to=\"/main/home\" className=\"item\">\r\n            首页\r\n          </NavLink>\r\n          <NavLink to=\"/main/note\" className=\"item\">\r\n            创作\r\n          </NavLink>\r\n          <NavLink to=\"/main/friend\" className=\"item\">\r\n            好友\r\n          </NavLink>\r\n          <NavLink to=\"/main/me\" className=\"item\">\r\n            个人中心\r\n          </NavLink>\r\n        </div>\r\n        <div className=\"tip_wrap\">\r\n          <div style={{ display: ifLogin ? \"\" : \"none\" }}>\r\n            {global.user.name}，欢迎你！\r\n            <span onClick={this.handleExit}>退出</span>\r\n          </div>\r\n          <Link style={{ display: ifLogin ? \"none\" : \"\" }} to=\"/login\">\r\n            登录 | 注册\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(header);\r\n","import React, { Component } from 'react';\r\nimport './footer.scss';\r\n\r\nexport default class footer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"footer\">\r\n                版权所有 xhw\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Header from \"../../component/header/header\";\r\nimport Footer from \"../../component/footer/footer\";\r\nimport { mainRoutes as routes } from \"../../routes/index\";\r\nimport \"./main.scss\";\r\nexport default class main extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"main\">\r\n        <Header></Header>\r\n        <div className=\"main_wrap\">\r\n          <Switch>\r\n            {routes.map((r) => {\r\n              return (\r\n                <Route\r\n                  key={r.path}\r\n                  path={r.path}\r\n                  component={r.component}\r\n                  exact={r.exact}\r\n                ></Route>\r\n              );\r\n            })}\r\n            <Redirect to=\"/main/home\"></Redirect>\r\n          </Switch>\r\n        </div>\r\n        <Footer></Footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export function checkValIsNull(val) {\r\n    return val === '' || val.length === 0;\r\n}\r\n\r\n","import axios from 'axios';\r\nimport { message } from 'antd';\r\n\r\nconst BASE = 'http://localhost:8000';\r\n\r\nexport default function ajax(url, data = {}, type = 'GET') {\r\n    let baseURL = BASE + url;\r\n    const hide = message.loading('Loading...', 0);\r\n    return new Promise((resolve, reject) => {\r\n        let promise;\r\n        if (type === 'GET') {\r\n            promise = axios.get(baseURL, { params: data });\r\n        } else {\r\n            promise = axios.post(baseURL, data);\r\n        }\r\n        promise.then(res => {\r\n            resolve(res.data);\r\n        }).catch(err => {\r\n            reject(err)\r\n        }).finally(() => {\r\n            // Dismiss manually and asynchronously\r\n            setTimeout(hide, 0);\r\n        })\r\n    })\r\n}","import React, { Component } from \"react\";\r\nimport { Input, Button, message } from \"antd\";\r\nimport { EyeTwoTone, EyeInvisibleOutlined } from \"@ant-design/icons\";\r\nimport { checkValIsNull } from \"../../utils/check\";\r\nimport ajax from \"../../api/ajax\";\r\nimport global from \"../../store/index\";\r\nimport \"./login.scss\";\r\n\r\nexport default class login extends Component {\r\n  state = {\r\n    loginModal: true,\r\n    imgURL: \"\",\r\n  };\r\n\r\n  // 登录\r\n  handleLogin = () => {\r\n    const {\r\n      name: {\r\n        state: { value: name = \"\" },\r\n      },\r\n      pwd: {\r\n        state: { value: pwd = \"\" },\r\n      },\r\n      code: {\r\n        state: { value: code = \"\" },\r\n      },\r\n    } = this;\r\n    console.log(name, pwd, code);\r\n    if (checkValIsNull(name)) return message.info(\"用户名不能为空！\", 1);\r\n    if (checkValIsNull(pwd)) return message.info(\"密码不能为空！\", 1);\r\n    if (checkValIsNull(code)) return message.info(\"验证码不能为空！\", 1);\r\n\r\n    ajax(\"/login\", { name, pwd, code: code.toLowerCase() }, \"POST\")\r\n      .then((res) => {\r\n        const { status, msg, data } = res;\r\n        if (status !== 1) return message.error(msg, 1);\r\n        // 登陆成功\r\n        message.success(msg, 1);\r\n        const { name, pwd, id } = data;\r\n        global.user.name = name;\r\n        global.user.pwd = pwd;\r\n        global.user.uid = id;\r\n        setTimeout(() => this.props.history.push(\"/main/\"), 500);\r\n      })\r\n      .catch((err) => {\r\n        message.error(\"服务器内部错误\", 1);\r\n      });\r\n  };\r\n\r\n  // 处理注册\r\n  handleRegister = () => {\r\n    const {\r\n      rname: {\r\n        state: { value: name = \"\" },\r\n      },\r\n      rpwd: {\r\n        state: { value: pwd = \"\" },\r\n      },\r\n      rnpwd: {\r\n        state: { value: npwd = \"\" },\r\n      },\r\n    } = this;\r\n\r\n    console.log(name, pwd, npwd);\r\n    if (checkValIsNull(name)) return message.info(\"用户名不能为空！\", 1);\r\n    if (checkValIsNull(pwd)) return message.info(\"密码不能为空！\", 1);\r\n    if (pwd !== npwd) return message.info(\"输入的密码不一致\", 1);\r\n    ajax(\"/register\", { name, pwd }, \"POST\")\r\n      .then((res) => {\r\n        const { msg, status } = res;\r\n        if (status !== 1) return message.error(msg, 1);\r\n        // 注册成功\r\n        message.success(msg, 1);\r\n        this.rname.state.value = \"\";\r\n        this.rpwd.state.value = \"\";\r\n        this.rnpwd.state.value = \"\";\r\n      })\r\n      .catch((err) => {\r\n        message.error(\"服务器内部错误\", 1);\r\n      });\r\n  };\r\n\r\n  // 获取验证码\r\n  getCode = () => {\r\n    ajax(\"/code\")\r\n      .then((res) => {\r\n        const { data } = res;\r\n        this.setState({ imgURL: data });\r\n        let img = document.querySelector(\".imgPic\");\r\n        img.innerHTML = data;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        message.error(\"服务器内部错误\", 1);\r\n      });\r\n  };\r\n\r\n  // 开关\r\n  toggleBtn = () => {\r\n    const { loginModal } = this.state;\r\n    // 登陆页面呈现时，重新获取验证码\r\n    if(!loginModal) this.getCode();\r\n    this.setState({ loginModal: !loginModal });\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.getCode();\r\n  }\r\n\r\n  render() {\r\n    const { loginModal } = this.state;\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        {loginModal && (\r\n          <div className=\"login_wrap\">\r\n            <h3>用户登录</h3>\r\n            <div className=\"user\">\r\n              <span>用户名</span>\r\n              <Input\r\n                ref={(c) => (this.name = c)}\r\n                style={{ width: \"70%\" }}\r\n              ></Input>\r\n            </div>\r\n            <div className=\"pwd\">\r\n              <span>密码</span>\r\n              <Input.Password\r\n                ref={(c) => (this.pwd = c)}\r\n                iconRender={(visible) =>\r\n                  visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />\r\n                }\r\n                style={{ width: \"70%\" }}\r\n              ></Input.Password>\r\n            </div>\r\n            <div className=\"code\">\r\n              <span>验证码</span>\r\n              <div style={{ width: \"70%\" }}>\r\n                <Input\r\n                  ref={(c) => (this.code = c)}\r\n                  style={{ width: \"50%\" }}\r\n                ></Input>\r\n                <div className=\"imgPic\" onClick={this.getCode}>\r\n                  获取验证码\r\n                </div>\r\n                {/* <img className=\"img\" src={imgURL} alt=\"验证码\" /> */}\r\n              </div>\r\n            </div>\r\n            <div className=\"to\">\r\n              <span onClick={this.toggleBtn}>还未注册，前往注册→</span>\r\n            </div>\r\n            <div className=\"submit\">\r\n              <Button type=\"primary\" size=\"large\" onClick={this.handleLogin}>\r\n                登录\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {!loginModal && (\r\n          <div className=\"reg_wrap\">\r\n            <h3>用户注册</h3>\r\n            <div className=\"user\">\r\n              <span>用户名</span>\r\n              <Input\r\n                ref={(c) => (this.rname = c)}\r\n                style={{ width: \"70%\" }}\r\n              ></Input>\r\n            </div>\r\n            <div className=\"pwd\">\r\n              <span>密码</span>\r\n              <Input.Password\r\n                ref={(c) => (this.rpwd = c)}\r\n                iconRender={(visible) =>\r\n                  visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />\r\n                }\r\n                style={{ width: \"70%\" }}\r\n              ></Input.Password>\r\n            </div>\r\n            <div className=\"pwd\">\r\n              <span>确认新密码</span>\r\n              <Input.Password\r\n                ref={(c) => (this.rnpwd = c)}\r\n                iconRender={(visible) =>\r\n                  visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />\r\n                }\r\n                style={{ width: \"70%\" }}\r\n              ></Input.Password>\r\n            </div>\r\n            <div className=\"to\">\r\n              <span onClick={this.toggleBtn}>已有帐号，前往登录→</span>\r\n            </div>\r\n            <div className=\"submit\">\r\n              <Button type=\"primary\" size=\"large\" onClick={this.handleRegister}>\r\n                注册\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Tag } from \"antd\";\r\nimport { UserOutlined, MessageOutlined, LikeOutlined } from \"@ant-design/icons\";\r\nimport \"./noteItem.scss\";\r\n\r\nclass noteItem extends Component {\r\n  state = {\r\n    note: {\r\n      author: \"**\",\r\n      color: \"\",\r\n      comment: \"-\",\r\n      content: \"********\",\r\n      date: \"2021-12-13\",\r\n      nid: -1,\r\n      praise: \"-\",\r\n      tag: \"其他\",\r\n      tid: -1,\r\n      title: \"**\",\r\n      uid: -1,\r\n    },\r\n  };\r\n\r\n  goDetail = (nid) => {\r\n    this.props.history.push({ pathname: \"/main/detail\", query: { nid } });\r\n  };\r\n\r\n  render() {\r\n    const { note: base } = this.state;\r\n    let { note } = this.props;\r\n    // 如果对象为空，赋予原始值\r\n    if (Object.getOwnPropertyNames(note).length === 0) {\r\n      note = base;\r\n    }\r\n    return (\r\n      <div className=\"note_item\">\r\n        <div className=\"top\">\r\n          <h3 className=\"title\" onClick={() => this.goDetail(note.nid)}>\r\n            {note.title}\r\n          </h3>\r\n          <Tag color={note.color}>{note.tag}</Tag>\r\n        </div>\r\n        <div className=\"author\">\r\n          <UserOutlined />\r\n          <span className=\"name\">{note.author}</span>\r\n        </div>\r\n        <div className=\"content\">\r\n          {note.content}\r\n          {/* 我是你法回放v年底规划发hi算法发滴哦覅会发生方法对付大大方方\r\n          我是你法回放v年底规划发hi算法发滴哦覅会发生方法对付大大方方\r\n          我是你法回放v年底规划发hi算法发滴哦覅会发生方法对付大大方方\r\n          我是你法回放v年底规划发hi算法发滴哦覅会发生方法对付大大方方\r\n          我是你法回放v年底规划发hi算法发滴哦覅会发生方法对付大大方方\r\n          我是你法回放v年底规划发hi算法发滴哦覅会发生方法对付大大方方\r\n          我是你法回放v年底规划发hi算法发滴哦覅会发生方法对付大大方方\r\n        */}\r\n        </div>\r\n        <div className=\"bottom\">\r\n          <div className=\"date\">{note.date}</div>\r\n          <div className=\"comment\">\r\n            <MessageOutlined /> {note.comment}\r\n          </div>\r\n          <div className=\"praise\">\r\n            <LikeOutlined /> {note.praise}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(noteItem);\r\n","import React, { Component } from \"react\";\r\nimport { Input, message } from \"antd\";\r\nimport NoteItem from \"../../component/noteItem/noteItem\";\r\nimport ajax from \"../../api/ajax\";\r\nimport global from \"../../store/index\";\r\nimport { checkValIsNull } from \"../../utils/check\";\r\nimport \"./home.scss\";\r\n\r\nconst { Search } = Input;\r\n\r\nexport default class home extends Component {\r\n  state = {\r\n    // 标签列表\r\n    tagList: [\r\n      {\r\n        tid: -1,\r\n        tag: \"全部\",\r\n        color: \"black\",\r\n      },\r\n      // {\r\n      //   tid: 1,\r\n      //   title: \"学习\",\r\n      //   color: \"black\",\r\n      // },\r\n      // {\r\n      //   tid: 2,\r\n      //   title: \"生活\",\r\n      //   color: \"black\",\r\n      // },\r\n      // {\r\n      //   tid: 3,\r\n      //   title: \"美食\",\r\n      //   color: \"black\",\r\n      // },\r\n      // {\r\n      //   tid: 4,\r\n      //   title: \"其他\",\r\n      //   color: \"black\",\r\n      // },\r\n    ],\r\n    // 当前标签索引\r\n    curIndex: 0,\r\n    // 贴文列表\r\n    noteList: [\r\n      // {\r\n      //   author: \"xhw\",\r\n      //   color: \"red\",\r\n      //   comment: 2,\r\n      //   content: \"打发打发\",\r\n      //   date: \"2021-12-08\",\r\n      //   nid: 1,\r\n      //   praise: 1,\r\n      //   tag: \"生活\",\r\n      //   tid: 2,\r\n      //   title: \"合肥\",\r\n      //   uid: 1,\r\n      // },\r\n      {},\r\n    ],\r\n  };\r\n\r\n  // 搜索内容\r\n  onSearch = (key) => {\r\n    console.log(key);\r\n    if (checkValIsNull(key)) return message.error(\"请输入内容\", 1);\r\n    ajax(\"/notelist\", { key })\r\n      .then((res) => {\r\n        console.log(res);\r\n        const { data, status, msg } = res;\r\n        if (status !== 1) return message.error(msg);\r\n        message.success(\"搜索结果已展示\");\r\n        this.setState({ noteList: data, curIndex: -1 });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        message.error(\"服务器内部错误\");\r\n      });\r\n  };\r\n\r\n  // 切换标签\r\n  changeTag = (index) => {\r\n    const { tagList } = this.state;\r\n    this.setState({ curIndex: index });\r\n    ajax(\"/notelist\", index === 0 ? {} : { tid: tagList[index].tid })\r\n      .then((res) => {\r\n        console.log(res);\r\n        const { data, status, msg } = res;\r\n        if (status !== 1) return message.error(msg);\r\n        message.success(\"获取贴文成功\", 1);\r\n        this.setState({ noteList: data });\r\n        console.log(this.state.noteList);\r\n      })\r\n      .catch((err) => {\r\n        message.error(\"服务器错误\", 1);\r\n      });\r\n  };\r\n\r\n  // 获取标签列表\r\n  reqTagList = () => {\r\n    ajax(\"/taglist\")\r\n      .then((res) => {\r\n        const { tagList } = this.state;\r\n        console.log(res, tagList);\r\n        const { data: tag, status, msg } = res;\r\n\r\n        if (status !== 1) return message.error(msg);\r\n        this.setState({ tagList: [...tagList, ...tag] });\r\n        global.tagArr = tag;\r\n        message.success(\"获取分区成功\", 0.5);\r\n      })\r\n      .catch((err) => {\r\n        message.error(\"服务器内部错误\", 1);\r\n      });\r\n  };\r\n\r\n  // 获取贴文情况\r\n  reqNoteList = (uid = -1) => {\r\n    if (uid !== -1) this.setState({ curIndex: -1 });\r\n    ajax(\"/notelist\", uid === -1 ? {} : { uid })\r\n      .then((res) => {\r\n        const { data: noteList, status, msg } = res;\r\n        if (status !== 1) return message.error(msg);\r\n        message.success(\"获取贴文成功\", 1);\r\n        this.setState({ noteList });\r\n      })\r\n      .catch((err) => {\r\n        message.error(\"服务器内部错误\", 1);\r\n      });\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.reqTagList();\r\n    const { location } = this.props;\r\n    let id = -1;\r\n    if (\"query\" in location) {\r\n      const { uid } = location.query;\r\n      id = uid;\r\n    }\r\n    this.reqNoteList(id);\r\n  }\r\n\r\n  render() {\r\n    const { tagList, curIndex, noteList } = this.state;\r\n    return (\r\n      <div className=\"home\">\r\n        <div className=\"input_wrap\">\r\n          <Search\r\n            placeholder=\"输入关键字搜索贴文\"\r\n            onSearch={this.onSearch}\r\n            enterButton\r\n          />\r\n        </div>\r\n        <ul className=\"tag_wrap\">\r\n          {tagList.map((tag, index) => {\r\n            return (\r\n              <li\r\n                key={index}\r\n                onClick={() => this.changeTag(index)}\r\n                className={curIndex === index ? \"active\" : \"\"}\r\n              >\r\n                {tag.tag}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n        <div className=\"note_wrap\">\r\n          {!noteList.length && (\r\n            <div style={{ textAlign: \"center\" }}>暂无数据</div>\r\n          )}\r\n          {noteList.map((note, index) => {\r\n            return <NoteItem key={index} note={note}></NoteItem>;\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Table, Space, Tag, Modal, message } from \"antd\";\r\nimport ajax from \"../../api/ajax\";\r\nimport global from \"../../store/index\";\r\nimport \"./note.scss\";\r\n\r\nexport default class note extends Component {\r\n  state = {\r\n    columns: [\r\n      {\r\n        title: \"标题\",\r\n        dataIndex: \"title\",\r\n        key: \"title\",\r\n      },\r\n      {\r\n        title: \"创作者\",\r\n        dataIndex: \"author\",\r\n        key: \"author\",\r\n      },\r\n      {\r\n        title: \"创作日期\",\r\n        dataIndex: \"date\",\r\n        key: \"date\",\r\n      },\r\n      {\r\n        title: \"标签\",\r\n        dataIndex: \"tag\",\r\n        key: \"tag\",\r\n        render: (tag, note) => {\r\n          // console.log(tag, note);\r\n          return <Tag color={note.color}>{tag}</Tag>;\r\n        },\r\n      },\r\n      {\r\n        title: \"操作\",\r\n        key: \"action\",\r\n        align: \"center\",\r\n        render: (e) => (\r\n          <Space size=\"middle\">\r\n            <Button type=\"danger\" onClick={() => this.handleDelete(e)}>\r\n              删除\r\n            </Button>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() =>\r\n                this.props.history.push({\r\n                  pathname: \"/main/publish\",\r\n                  query: { note: e },\r\n                })\r\n              }\r\n            >\r\n              修改\r\n            </Button>\r\n            <Button onClick={() => this.showMore(e)}>更多</Button>\r\n          </Space>\r\n        ),\r\n      },\r\n    ],\r\n    noteList: [\r\n      // {\r\n      //   key: '1',\r\n      //   title: \"合肥\",\r\n      //   author: \"xhw\",\r\n      //   date: \"2021-12-08\",\r\n      //   tag: \"生活\",\r\n      // },\r\n    ],\r\n  };\r\n\r\n  // 删除贴文\r\n  handleDelete = (e) => {\r\n    console.log(e);\r\n    Modal.confirm({\r\n      title: `确认删除《${e.title}》贴文`,\r\n      okText: \"确认\",\r\n      cancelText: \"取消\",\r\n      onOk: () => {\r\n        const { user } = global;\r\n        ajax(\"/deletenote\", { nid: e.nid, uid: user.uid }, \"POST\")\r\n          .then((res) => {\r\n            console.log(res);\r\n            const { status, msg } = res;\r\n            if (status !== 1) return message.error(msg, 1);\r\n            message.success(`已删除《${e.title}》贴文`, 1);\r\n            this.getMyNote(user.uid);\r\n          })\r\n          .catch((err) => {\r\n            if (user.uid === -1) {\r\n              message.info(\"请先登录！\", 1);\r\n            } else {\r\n              message.error(\"服务器内部错误\", 1);\r\n            }\r\n          });\r\n      },\r\n    });\r\n  };\r\n\r\n  //显示更多\r\n  showMore = (e) => {\r\n    console.log(e);\r\n    const { nid } = e;\r\n    this.props.history.push({ pathname: \"/main/detail\", query: { nid } });\r\n  };\r\n\r\n  // 获取贴文\r\n  getMyNote = (uid) => {\r\n    ajax(\"/notelist\", { uid })\r\n      .then((res) => {\r\n        console.log(res);\r\n        const { status, data, msg } = res;\r\n        if (status !== 1) return message.error(msg, 1);\r\n        const noteList = data.map((note, index) => {\r\n          return {\r\n            ...note,\r\n            key: +index + 1,\r\n          };\r\n        });\r\n        this.setState({ noteList });\r\n        // message.success(\"获取贴文成功\", 1);\r\n      })\r\n      .catch((err) => {\r\n        message.error(\"服务器内部错误\",1);\r\n      });\r\n  };\r\n\r\n  componentWillMount() {\r\n    const {user} = global;\r\n    this.getMyNote(user.uid);\r\n  }\r\n\r\n  render() {\r\n    const { columns, noteList } = this.state;\r\n    console.log(noteList);\r\n    return (\r\n      <div className=\"note\">\r\n        <div className=\"top\">\r\n          <h3>我发布的贴文</h3>\r\n          <Link to=\"/main/publish\">\r\n            <Button type=\"primary\">+ 写贴文</Button>\r\n          </Link>\r\n        </div>\r\n        <div className=\"note_wrap\">\r\n          <Table\r\n            pagination={false}\r\n            columns={columns}\r\n            dataSource={noteList}\r\n            bordered\r\n          ></Table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { List, Avatar, Button, Modal, message, Input, Table } from \"antd\";\r\nimport {UserOutlined} from '@ant-design/icons';\r\nimport ajax from \"../../api/ajax\";\r\nimport global from \"../../store/index\";\r\nimport \"./friend.scss\";\r\n\r\nexport default class friend extends Component {\r\n  state = {\r\n    friendList: [\r\n      // {\r\n      //   uid: 1,\r\n      //   name: \"xhw\",\r\n      // },\r\n      // {\r\n      //   uid: 2,\r\n      //   name: \"xhw233\",\r\n      // },\r\n    ],\r\n    friendModal: false, //好友搜索展示框\r\n    // 搜索好友展示用\r\n    columns: [\r\n      {\r\n        title: \"用户\",\r\n        dataIndex: \"name\",\r\n        key: \"name\",\r\n      },\r\n      {\r\n        title: \"操作\",\r\n        key: \"action\",\r\n        align: \"center\",\r\n        render: (e) => (\r\n          <Button type=\"primary\" onClick={() => this.addFriend(e)}>\r\n            添加\r\n          </Button>\r\n        ),\r\n      },\r\n    ],\r\n    userList: [\r\n      {\r\n        key: \"1\",\r\n        name: \"xhw\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  //   删除好友\r\n  handleDelete = (e) => {\r\n    console.log(e);\r\n    Modal.confirm({\r\n      title: `确认删除好友${e.name}`,\r\n      okText: \"确认\",\r\n      cancelText: \"取消\",\r\n      onOk: () => {\r\n        // this.props.history.replace(\"/login\");\r\n        const { user } = global;\r\n        ajax(\"/deletefriend\", { uid: user.uid, fid: e.id }, \"POST\")\r\n          .then((res) => {\r\n            console.log(res);\r\n            const { status, msg } = res;\r\n            if (status !== 1) return message.error(msg, 1);\r\n            message.success(`已删除好友${e.name}`, 1);\r\n            this.getFriendList(user.uid);\r\n          })\r\n          .catch((err) => {\r\n            if (user.uid === -1) {\r\n              message.info(\"请先登录！\", 1);\r\n            } else {\r\n              message.error(\"服务器内部错误\", 1);\r\n            }\r\n          });\r\n      },\r\n    });\r\n  };\r\n\r\n  //   查看好友更多信息\r\n  goFriend = (e) => {\r\n    this.props.history.push({\r\n      pathname: \"/main/home/\",\r\n      query: { uid: e.id },\r\n    });\r\n  };\r\n\r\n  // 添加好友\r\n  addFriend = (e) => {\r\n    const { user } = global;\r\n    console.log(e);\r\n    if (e.id === user.uid) return message.error(\"不能添加自己为好友\");\r\n    ajax(\"/addfriend\", { uid: user.uid, fid: e.id }, \"POST\")\r\n      .then((res) => {\r\n        const { msg, status } = res;\r\n        if (status !== 1) return message.info(msg, 1);\r\n        message.success(msg, 1);\r\n        this.getFriendList(user.uid);\r\n      })\r\n      .catch((err) => {\r\n        message.error(\"服务器内部错误\", 1);\r\n      });\r\n  };\r\n\r\n  // 开关\r\n  toggleModal = () => {\r\n    const { friendModal } = this.state;\r\n    // 清空数据\r\n    if (this.searchVal) this.searchVal.state.value = \"\";\r\n    this.setState({\r\n      friendModal: !friendModal,\r\n      userList: [],\r\n    });\r\n  };\r\n\r\n  //   搜索好友\r\n  onSearch = (e) => {\r\n    console.log(e);\r\n    ajax(\"/searchuser\", { key: e }, \"POST\")\r\n      .then((res) => {\r\n        console.log(res);\r\n        let { data, status, msg } = res;\r\n        if (status !== 1) return message.error(msg, 1);\r\n        data = data.map((user, index) => {\r\n          return {\r\n            key: index,\r\n            ...user,\r\n          };\r\n        });\r\n        this.setState({ userList: data });\r\n      })\r\n      .catch((err) => {\r\n        message.error(\"服务器内部错误\", 1);\r\n      });\r\n  };\r\n\r\n  // 获取好友列表\r\n  getFriendList = (uid) => {\r\n    ajax(\"/friendlist\", { uid })\r\n      .then((res) => {\r\n        console.log(res);\r\n        const { status, msg, data } = res;\r\n        if (status !== 1) return message.error(msg, 1);\r\n        // message.success(\"获取好友列表成功\", 1);\r\n        this.setState({ friendList: data });\r\n      })\r\n      .catch((err) => {\r\n        message.error(\"服务器内部错误\", 1);\r\n      });\r\n  };\r\n\r\n  componentWillMount() {\r\n    // 获取用户id\r\n    const { user } = global;\r\n    this.getFriendList(user.uid);\r\n  }\r\n\r\n  render() {\r\n    const { friendList, friendModal, columns, userList } = this.state;\r\n    return (\r\n      <div className=\"friend\">\r\n        <div className=\"top\">\r\n          <h3>好友列表</h3>\r\n          <Button onClick={this.toggleModal}>添加好友</Button>\r\n        </div>\r\n        <List\r\n          className=\"friend_list\"\r\n          dataSource={friendList}\r\n          size=\"large\"\r\n          bordered\r\n          renderItem={(item) => (\r\n            <List.Item\r\n              actions={[\r\n                <Button\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    this.handleDelete(item);\r\n                  }}\r\n                  type=\"danger\"\r\n                >\r\n                  删除\r\n                </Button>,\r\n                <Button\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    this.goFriend(item);\r\n                  }}\r\n                  type=\"primary\"\r\n                >\r\n                  更多\r\n                </Button>,\r\n              ]}\r\n            >\r\n              <List.Item.Meta\r\n                avatar={<Avatar icon={<UserOutlined />}/>}\r\n                title={item.name}\r\n                description=\"此用户很赖，没有介绍\"\r\n              />\r\n            </List.Item>\r\n          )}\r\n        />\r\n        {/* 好友拟态框 */}\r\n        <Modal\r\n          title=\"添加好友\"\r\n          visible={friendModal}\r\n          onCancel={this.toggleModal}\r\n          footer={[\r\n            <Button key=\"back\" onClick={this.toggleModal}>\r\n              取消\r\n            </Button>,\r\n          ]}\r\n        >\r\n          <div id=\"friend_wrap\">\r\n            <Input.Search\r\n              placeholder=\"输入关键字搜索好友\"\r\n              ref={(c) => (this.searchVal = c)}\r\n              onSearch={this.onSearch}\r\n              // allowClear\r\n              enterButton\r\n            />\r\n            <Table\r\n              className=\"table\"\r\n              pagination={false}\r\n              columns={columns}\r\n              dataSource={userList}\r\n              bordered\r\n            ></Table>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Chart, Util } from \"@antv/g2\";\r\nimport \"./pieChart.scss\";\r\n\r\nexport default class pieChart extends Component {\r\n  state = {};\r\n\r\n  componentWillMount() {\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { noteTotal, classify } = nextProps;\r\n    if (nextProps.noteTotal !== this.props.noteTotal) {\r\n      this.pieRender(classify, noteTotal);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  pieRender = (classify, noteTotal) => {\r\n    const data = classify.map((item) => {\r\n      return {\r\n        type: item.tag,\r\n        value: item.count,\r\n      };\r\n    });\r\n    const chart = new Chart({\r\n      container: \"container\",\r\n      autoFit: true,\r\n      height: 300,\r\n      // padding: [20, 10, 20, 10],\r\n    });\r\n\r\n    chart.data(data);\r\n\r\n    chart.coordinate(\"theta\", {\r\n      radius: 0.8,\r\n    });\r\n    chart.tooltip({\r\n      showMarkers: false,\r\n    });\r\n\r\n    chart\r\n      .interval()\r\n      .adjust(\"stack\")\r\n      .position(\"value\")\r\n      .color(\r\n        \"type\",\r\n        // [\"#063d8a\", \"#1770d6\", \"#47abfc\", \"#38c060\"]\r\n        classify.map((item) => {\r\n          return item.color;\r\n        })\r\n      )\r\n      .style({ opacity: 1 })\r\n      .state({\r\n        active: {\r\n          style: (element) => {\r\n            const shape = element.shape;\r\n            return {\r\n              matrix: Util.zoom(shape, 1.1),\r\n            };\r\n          },\r\n        },\r\n      })\r\n      .label(\"type\", (val) => {\r\n        return {\r\n          offset: -30,\r\n          style: {\r\n            opacity: 1,\r\n            fill: \"white\",\r\n            fontSize: 12,\r\n            shadowBlur: 2,\r\n            shadowColor: \"rgba(0, 0, 0, .45)\",\r\n          },\r\n          content: (obj) => {\r\n            return (\r\n              obj.type + \"\\n\" + Math.floor((obj.value / noteTotal) * 100) + \"%\"\r\n            );\r\n          },\r\n        };\r\n      });\r\n\r\n    // 可选择的样式\r\n    chart.interaction(\"element-single-selected\");\r\n    // 渲染\r\n    chart.render();\r\n  };\r\n\r\n  render() {\r\n    return <div id=\"container\"></div>;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Input, Button, Statistic, message } from \"antd\";\r\nimport { EyeTwoTone, EyeInvisibleOutlined } from \"@ant-design/icons\";\r\nimport Pie from \"../../component/pieChart/pieChart\";\r\nimport ajax from \"../../api/ajax\";\r\nimport global from \"../../store/index\";\r\nimport { checkValIsNull } from \"../../utils/check\";\r\nimport \"./me.scss\";\r\n\r\nexport default class me extends Component {\r\n  state = {\r\n    name: \"test\", //用户名\r\n    ifEdit: false, //是否可以编辑\r\n    friendCount: 0, //好友数\r\n    noteTotal: 0, //贴文总数\r\n    // 贴文分类情况\r\n    classify: [],\r\n  };\r\n\r\n  // 控制开关\r\n  toggleBtn = () => {\r\n    const { ifEdit } = this.state;\r\n    this.setState({ ifEdit: !ifEdit });\r\n  };\r\n\r\n  // 获取用户基本情况\r\n  getUserBase = (uid) => {\r\n    ajax(\"/base\", { uid }, \"POST\")\r\n      .then((res) => {\r\n        console.log(res);\r\n        const { status, msg, data } = res;\r\n        if (status !== 1) return message.error(msg, 1);\r\n        message.success(\"获取用户基本情况成功\", 1);\r\n        const { friendCount, noteTotal, classify } = data;\r\n        this.setState({ friendCount, noteTotal, classify });\r\n      })\r\n      .catch((err) => {\r\n        if (uid === -1) {\r\n          message.info(\"请先登录！\", 1);\r\n        } else {\r\n          message.error(\"服务器内部错误\", 1);\r\n        }\r\n      });\r\n  };\r\n\r\n  // 保存信息\r\n  saveMsg = () => {\r\n    console.log(this);\r\n    const {\r\n      name: {\r\n        state: { value: name },\r\n      },\r\n      pwd: {\r\n        state: { value: pwd },\r\n      },\r\n      npwd: {\r\n        state: { value: npwd },\r\n      },\r\n    } = this;\r\n    if (name === undefined || checkValIsNull(name))\r\n      return message.error(\"用户名不能为空\", 1);\r\n    if (pwd === undefined || checkValIsNull(pwd))\r\n      return message.error(\"密码不能为空\", 1);\r\n    if (npwd === undefined || checkValIsNull(npwd))\r\n      return message.error(\"新密码不能为空\", 1);\r\n    if (pwd !== npwd) return message.error(\"两次密码不一致\", 1);\r\n\r\n    const { user } = global;\r\n    const data = {\r\n      name,\r\n      pwd,\r\n      uid: user.uid,\r\n    };\r\n\r\n    ajax(\"/updateuser\", data, \"POST\")\r\n      .then((res) => {\r\n        console.log(res);\r\n        const { status, msg } = res;\r\n        if (status !== 1) return message.error(msg, 1);\r\n        message.success(msg, 1);\r\n        // 成功修改用户的逻辑\r\n        global.user.name = name;\r\n        global.user.pwd = pwd;\r\n        this.setState({ name });\r\n        this.toggleBtn();\r\n      })\r\n      .catch((err) => {\r\n        // message.error(err);\r\n        message.error(\"服务器内部错误\", 1);\r\n      });\r\n  };\r\n\r\n  componentWillMount() {\r\n    const { user } = global;\r\n    console.log(this);\r\n    this.getUserBase(user.uid);\r\n    this.setState({ name: user.name });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { user } = global;\r\n    console.log(global.tagArr);\r\n    this.name.state.value = user.name;\r\n    this.pwd.state.value = user.pwd;\r\n  }\r\n\r\n  render() {\r\n    const { name, friendCount, noteTotal, classify, ifEdit } = this.state;\r\n    return (\r\n      <div className=\"me\">\r\n        <div className=\"title\">\r\n          <h3>{name} 的个人中心</h3>\r\n        </div>\r\n        <div className=\"base\">\r\n          <div className=\"left\">\r\n            <h4>用户基本情况</h4>\r\n            <div className=\"wrap\">\r\n              <Statistic className=\"item\" title=\"发帖总数\" value={noteTotal} />\r\n              <Statistic className=\"item\" title=\"好友数\" value={friendCount} />\r\n            </div>\r\n            <Pie noteTotal={noteTotal} classify={classify}></Pie>\r\n          </div>\r\n\r\n          <div className=\"message\">\r\n            <h4>用户基本资料</h4>\r\n            <div className=\"name\">\r\n              <span>用户名</span>\r\n              <Input\r\n                ref={(c) => (this.name = c)}\r\n                style={{ width: \"70%\" }}\r\n                disabled={!ifEdit}\r\n              ></Input>\r\n            </div>\r\n            <div className=\"pwd\">\r\n              <span>密码</span>\r\n              <Input.Password\r\n                ref={(c) => (this.pwd = c)}\r\n                iconRender={(visible) =>\r\n                  visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />\r\n                }\r\n                disabled={!ifEdit}\r\n                style={{ width: \"70%\" }}\r\n              ></Input.Password>\r\n            </div>\r\n            <div\r\n              className=\"pwd\"\r\n              style={{\r\n                visibility: ifEdit ? \"visible\" : \"hidden\",\r\n              }}\r\n            >\r\n              <span>确认新密码</span>\r\n              <Input.Password\r\n                ref={(c) => (this.npwd = c)}\r\n                iconRender={(visible) =>\r\n                  visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />\r\n                }\r\n                disabled={!ifEdit}\r\n                style={{ width: \"70%\" }}\r\n              ></Input.Password>\r\n            </div>\r\n            <div className=\"btn_wrap\">\r\n              <Button\r\n                className=\"btn\"\r\n                type=\"primary\"\r\n                style={{ display: ifEdit ? \"none\" : \"\" }}\r\n                onClick={this.toggleBtn}\r\n              >\r\n                修改\r\n              </Button>\r\n              <>\r\n                <Button\r\n                  className=\"btn\"\r\n                  style={{ display: ifEdit ? \"\" : \"none\" }}\r\n                  onClick={this.toggleBtn}\r\n                >\r\n                  取消\r\n                </Button>\r\n                <Button\r\n                  style={{ display: ifEdit ? \"\" : \"none\" }}\r\n                  className=\"btn\"\r\n                  type=\"primary\"\r\n                  onClick={this.saveMsg}\r\n                >\r\n                  保存\r\n                </Button>\r\n              </>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Tag, List, Avatar, Input, Button, message, Modal } from \"antd\";\r\nimport { LikeFilled, MessageFilled,UserOutlined } from \"@ant-design/icons\";\r\nimport ajax from \"../../api/ajax\";\r\nimport global from \"../../store/index\";\r\nimport { checkValIsNull } from \"../../utils/check\";\r\nimport \"./detail.scss\";\r\n\r\nexport default class detail extends Component {\r\n  state = {\r\n    // 评论区\r\n    commentList: [\r\n      // {\r\n      //   cid: -1,\r\n      //   commenter: \"***\",\r\n      //   content: \"***\",\r\n      //   nid: -1,\r\n      //   uid: -1,\r\n      // },\r\n    ],\r\n    // 评论框\r\n    commentVisible: false,\r\n    // 点赞状态\r\n    ifPraise: false,\r\n    // 评论框内容\r\n    comment: \"\",\r\n    // 贴文详情\r\n    note: {\r\n      author: \"****\",\r\n      color: \"#333\",\r\n      comment: 2,\r\n      content: \"****\",\r\n      date: \"2021-12-08\",\r\n      nid: -1,\r\n      praise: 1,\r\n      tag: \"其他\",\r\n      tid: 4,\r\n      title: \"***\",\r\n      uid: 1,\r\n    },\r\n  };\r\n\r\n  //   控制点赞\r\n  togglePraise = () => {\r\n    const { ifPraise, note } = this.state;\r\n    const { user } = global;\r\n    const data = {\r\n      nid: note.nid,\r\n      uid: user.uid,\r\n    };\r\n    // 已是点赞状态，准备取消赞\r\n    if (ifPraise) {\r\n      ajax(\"/cancelpraise\", data, \"POST\")\r\n        .then((res) => {\r\n          console.log(res);\r\n          const { status, msg } = res;\r\n          if (status !== 1) return message.error(msg, 1);\r\n\r\n          message.success(msg, 1);\r\n          this.setState({ ifPraise: !ifPraise });\r\n        })\r\n        .catch((err) => {\r\n          if (user.uid === -1) {\r\n            message.info(\"请先登录！\", 1);\r\n          } else {\r\n            message.error(\"服务器内部错误\", 1);\r\n          }\r\n        });\r\n    }\r\n    // 已是没赞的状态，正准备点赞\r\n    else {\r\n      ajax(\"/praise\", data, \"POST\")\r\n        .then((res) => {\r\n          console.log(res);\r\n          const { status, msg } = res;\r\n          if (status !== 1) return message.error(msg, 1);\r\n\r\n          message.success(msg, 1);\r\n          this.setState({ ifPraise: !ifPraise });\r\n        })\r\n        .catch((err) => {\r\n          if (user.uid === -1) {\r\n            message.info(\"请先登录！\", 1);\r\n          } else {\r\n            message.error(\"服务器内部错误\", 1);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  //   控制评论框显示\r\n  toggleComment = () => {\r\n    const { commentVisible } = this.state;\r\n    this.setState({ commentVisible: !commentVisible });\r\n  };\r\n\r\n  // 获取贴文有关信息\r\n  getNoteDetail = async (nid) => {\r\n    try {\r\n      const { user } = global;\r\n\r\n      // 贴文详情\r\n      {\r\n        const { status, msg, data } = await ajax(\"/notelist\", { nid });\r\n        if (status !== 1) return message.error(msg, 1);\r\n        this.setState({ note: data });\r\n      }\r\n\r\n      // 评论详情\r\n      this.getComment(nid);\r\n\r\n      // 点赞详情\r\n      {\r\n        const { status, msg, data } = await ajax(\"/ifpraise\", {\r\n          nid,\r\n          uid: user.uid,\r\n        });\r\n        if (status !== 1) return message.error(msg, 1);\r\n        this.setState({ ifPraise: data });\r\n      }\r\n\r\n      message.success(\"获取贴文详情成功\", 1);\r\n    } catch (e) {\r\n      message.error(\"服务器内部错误\", 1);\r\n    }\r\n  };\r\n\r\n  // 获取评论\r\n  getComment = (nid) => {\r\n    ajax(\"/commentlist\", { nid })\r\n      .then((res) => {\r\n        const { status, msg, data } = res;\r\n        if (status !== 1) return message.error(msg, 1);\r\n        this.setState({ commentList: data });\r\n      })\r\n      .catch((err) => {\r\n        message.error(\"服务器内部错误\",1);\r\n      });\r\n  };\r\n\r\n  // 处理评论\r\n  handleComment = (e) => {\r\n    this.setState({ comment: e.target.value });\r\n  };\r\n\r\n  // 处理评论回车事件\r\n  handleEnter = (e)=>{\r\n    if(e.keyCode === 13){\r\n      this.commitComment();\r\n    }\r\n  }\r\n\r\n  // 提交评论\r\n  commitComment = () => {\r\n    const { comment, note } = this.state;\r\n    const { user } = global;\r\n\r\n    const data = {\r\n      content: comment,\r\n      nid: note.nid,\r\n      uid: user.uid,\r\n    };\r\n\r\n    if (checkValIsNull(comment)) return message.error(\"请输入评论！\");\r\n\r\n    // 评论\r\n    ajax(\"/addcomment\", data, \"POST\")\r\n      .then((res) => {\r\n        const { status, msg } = res;\r\n        if (status !== 1) return message.error(msg, 1);\r\n        message.success(\"评论成功\", 1);\r\n        // 清空评论\r\n        this.setState({ comment: \"\" });\r\n        this.getComment(note.nid);\r\n      })\r\n      .catch((err) => {\r\n        if (user.uid === -1) {\r\n          message.info(\"请先登录！\", 1);\r\n        } else {\r\n          message.error(\"服务器内部错误\", 1);\r\n        }\r\n      });\r\n  };\r\n\r\n  // 删除评论\r\n  deleteComment = (cid, uid, nid) => {\r\n    Modal.confirm({\r\n      title: `确认删除该评论`,\r\n      okText: \"确认\",\r\n      cancelText: \"取消\",\r\n      onOk: () => {\r\n        const { user } = global;\r\n        if (uid !== user.uid) return message.error(\"无法删除别人的评论！\");\r\n        ajax(\"/deletecomment\", { cid, uid }, \"POST\")\r\n          .then((res) => {\r\n            console.log(res);\r\n            const { status, msg } = res;\r\n            if (status !== 1) return message.error(msg, 1);\r\n            message.success(msg, 1);\r\n            this.getComment(nid);\r\n          })\r\n          .catch((err) => {\r\n            if (user.uid === -1) {\r\n              message.info(\"请先登录！\", 1);\r\n            } else {\r\n              message.error(\"服务器内部错误\", 1);\r\n            }\r\n          });\r\n      },\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    // console.log(this.props);\r\n    const { nid } = this.props.location.query || {};\r\n    console.log(nid);\r\n    this.getNoteDetail(nid);\r\n  }\r\n\r\n  render() {\r\n    const { commentList, commentVisible, ifPraise, note, comment } = this.state;\r\n    const { user } = global;\r\n    return (\r\n      <div className=\"detail\">\r\n        <h3>{note.title}</h3>\r\n        <div className=\"tips\">\r\n          <strong>{note.author}</strong>\r\n          <span>{note.date}</span>\r\n          <Tag color={note.color}>{note.tag}</Tag>\r\n        </div>\r\n        <div className=\"content\">{note.content}</div>\r\n        <div className=\"tool\">\r\n          <LikeFilled\r\n            onClick={this.togglePraise}\r\n            style={{\r\n              fontSize: 20,\r\n              cursor: \"pointer\",\r\n              color: ifPraise ? \"#0084ff\" : \"#999aaa\", //f8f8f8\r\n            }}\r\n          />\r\n          <MessageFilled\r\n            className=\"item\"\r\n            onClick={this.toggleComment}\r\n            style={{\r\n              fontSize: 20,\r\n              cursor: \"pointer\",\r\n              color: \"#999aaa\", //f8f8f8\r\n            }}\r\n          />\r\n        </div>\r\n        <div\r\n          className=\"comment_wrap\"\r\n          style={{ display: commentVisible ? \"\" : \"none\" }}\r\n        >\r\n          <Input\r\n            value={comment}\r\n            onKeyDown={e=> this.handleEnter(e)}\r\n            onChange={this.handleComment}\r\n          ></Input>\r\n          <Button className=\"btn\" type=\"primary\" onClick={this.commitComment}>\r\n            评论\r\n          </Button>\r\n        </div>\r\n        <div className=\"comment_area\">\r\n          <h4 className=\"title\">评论区</h4>\r\n          <List\r\n            className=\"friend_list\"\r\n            dataSource={commentList}\r\n            size=\"large\"\r\n            bordered\r\n            renderItem={(item) => (\r\n              <List.Item>\r\n                <List.Item.Meta\r\n                  avatar={<Avatar icon={<UserOutlined/>}/>}\r\n                  title={item.commenter}\r\n                  description={item.content}\r\n                />\r\n                <Button\r\n                  type=\"danger\"\r\n                  style={{ display: item.uid === user.uid ? \"\" : \"none\" }}\r\n                  onClick={() =>\r\n                    this.deleteComment(item.cid, item.uid, item.nid)\r\n                  }\r\n                >\r\n                  删除\r\n                </Button>\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Input, Select, Button, message } from \"antd\";\r\nimport \"./publish.scss\";\r\nimport { checkValIsNull } from \"../../utils/check\";\r\nimport ajax from \"../../api/ajax\";\r\nimport global from \"../../store/index\";\r\n\r\nexport default class publish extends Component {\r\n  state = {\r\n    // 贴文信息\r\n    note: {\r\n      // title: '', //标题\r\n      // content: '', //内容\r\n      // tid: 0, //标签id\r\n    },\r\n    // 标签分组\r\n    tagArr: [\r\n      // {\r\n      //   title: \"学习\",\r\n      //   color: \"blue\",\r\n      // },\r\n      // {\r\n      //   title: \"生活\",\r\n      //   color: \"red\",\r\n      // },\r\n      // {\r\n      //   title: \"美食\",\r\n      //   color: \"volcano\",\r\n      // },\r\n      // {\r\n      //   title: \"其他\",\r\n      //   color: \"green\",\r\n      // },\r\n    ],\r\n    tid: 0, //标签id\r\n    nid: 0, //贴文id\r\n    title: \"\", //贴文标题\r\n    content: \"\", //贴文内容\r\n    ifEdit: true, //是否是可编辑的状态\r\n    ifPublish: false, //是否修改贴文页面的标志（否，则为添加贴文页面）\r\n  };\r\n\r\n  // 提交贴文\r\n  commitNote = () => {\r\n    // const {\r\n    //   content: {\r\n    //     resizableTextArea: {\r\n    //       props: { value: content },\r\n    //     },\r\n    //   },\r\n    //   title: {\r\n    //     state: { value: title },\r\n    //   },\r\n    // } = this || {};\r\n    const { tid, content, title } = this.state;\r\n    const { uid } = global.user;\r\n    console.log(content, title, tid, uid);\r\n    if (title === undefined || checkValIsNull(title))\r\n      return message.error(\"请填写标题\", 1);\r\n    if (checkValIsNull(content)) return message.error(\"请填写内容\", 1);\r\n\r\n    const data = {\r\n      content,\r\n      title,\r\n      tid,\r\n      uid,\r\n    };\r\n    ajax(\"/addnote\", data, \"POST\")\r\n      .then((res) => {\r\n        console.log(res);\r\n        const { status, msg } = res;\r\n        // 失败\r\n        if (status !== 1) return message.error(msg, 1);\r\n        // 发表论文成功，清空框内的值\r\n        message.success(msg, 1);\r\n        this.setState({\r\n          title: \"\",\r\n          content: \"\",\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        if (uid === -1) {\r\n          message.info(\"请先登录！\", 1);\r\n        } else {\r\n          message.error(\"服务器内部错误\", 1);\r\n        }\r\n      });\r\n  };\r\n\r\n  //修改贴文\r\n  publishNote = () => {\r\n    const { tid, content, title, nid } = this.state;\r\n    const { user } = global;\r\n\r\n    const data = {\r\n      tid,\r\n      content,\r\n      title,\r\n      nid,\r\n      uid: user.uid,\r\n    };\r\n\r\n    ajax(\"/updatenote\", data, \"POST\")\r\n      .then((res) => {\r\n        console.log(res);\r\n        const { status, msg } = res;\r\n        // 修改失败\r\n        if (status !== 1) return message.error(msg, 1);\r\n        // 修改成功\r\n        message.success(\"修改成功\", 1);\r\n        this.setState({ ifEdit: false });\r\n      })\r\n      .catch((err) => {\r\n        if (user.uid === -1) {\r\n          message.info(\"请先登录！\", 1);\r\n        } else {\r\n          message.error(\"服务器内部错误\", 1);\r\n        }\r\n      });\r\n  };\r\n\r\n  // 处理标签id\r\n  handleTag = (val) => {\r\n    // console.log(val);\r\n    this.setState({ tid: val });\r\n  };\r\n\r\n  // 处理标题\r\n  handleTitle = (e) => {\r\n    this.setState({ title: e.target.value });\r\n  };\r\n\r\n  // 处理内容\r\n  handleContent = (e) => {\r\n    this.setState({ content: e.target.value });\r\n  };\r\n\r\n  componentWillMount() {\r\n    // 获取标签信息\r\n    console.log(global, this);\r\n    // 获取路由里参数信息\r\n    const { query } = this.props.location;\r\n    // 获取标签数组\r\n    const { tagArr } = global;\r\n    this.setState({\r\n      tagArr,\r\n      tid: tagArr[0].tid || 0,\r\n    });\r\n\r\n    if (query !== undefined) {\r\n      console.log(query);\r\n      const { note } = query;\r\n      this.setState({\r\n        nid: note.nid,\r\n        ifPublish: true,\r\n        tid: note.tid,\r\n        title: note.title,\r\n        content: note.content,\r\n        ifEdit: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { tagArr, tid, content, title, ifPublish, ifEdit } = this.state;\r\n    return (\r\n      <div className=\"publish\">\r\n        <div className=\"top\">\r\n          <h3 className=\"title\">贴文编辑</h3>\r\n        </div>\r\n        <div className=\"pub_note_wrap\">\r\n          <div className=\"\">\r\n            <span>标题：</span>\r\n            <Input\r\n              // ref={(c) => (this.title = c)}\r\n              value={title}\r\n              style={{ width: \"60%\" }}\r\n              onChange={this.handleTitle}\r\n              disabled={!ifEdit}\r\n            ></Input>\r\n          </div>\r\n          <div className=\"\">\r\n            <span>标签：</span>\r\n            <div style={{ width: \"60%\" }}>\r\n              <Select\r\n                defaultValue={tid}\r\n                size=\"small\"\r\n                disabled={!ifEdit}\r\n                onChange={this.handleTag}\r\n              >\r\n                {tagArr.map((tag, index) => (\r\n                  <Select.Option value={tag.tid} key={index}>\r\n                    {tag.tag}\r\n                  </Select.Option>\r\n                ))}\r\n              </Select>\r\n            </div>\r\n          </div>\r\n          <div className=\"content\">\r\n            <span>内容：</span>\r\n            <Input.TextArea\r\n              // ref={(c) => (this.content = c)}\r\n              value={content}\r\n              onChange={this.handleContent}\r\n              style={{ width: \"60%\" }}\r\n              autoSize={{ minRows: 5, maxRows: 8 }}\r\n              disabled={!ifEdit}\r\n            ></Input.TextArea>\r\n          </div>\r\n          <div className=\"btn_wrap\">\r\n            <Button\r\n              className=\"btn\"\r\n              size=\"large\"\r\n              onClick={() => this.props.history.goBack()}\r\n            >\r\n              返回\r\n            </Button>\r\n            <Button\r\n              style={{ display: ifPublish ? \"none\" : \"block\" }}\r\n              type=\"primary\"\r\n              className=\"btn\"\r\n              size=\"large\"\r\n              onClick={this.commitNote}\r\n            >\r\n              {/* 添加贴文用的保存按钮 */}\r\n              保存\r\n            </Button>\r\n            <Button\r\n              style={{ display: ifPublish ? \"block\" : \"none\" }}\r\n              type=\"dashed\"\r\n              className=\"btn\"\r\n              size=\"large\"\r\n              onClick={() => {\r\n                this.setState({ ifEdit: !ifEdit });\r\n              }}\r\n            >\r\n              {ifEdit ? \"取消\" : \"编辑\"}\r\n            </Button>\r\n            <Button\r\n              style={{ display: ifPublish ? \"block\" : \"none\" }}\r\n              type=\"primary\"\r\n              className=\"btn\"\r\n              size=\"large\"\r\n              onClick={this.publishNote}\r\n            >\r\n              修改\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import Main from \"../pages/main/main\";\r\nimport Login from \"../pages/login/login\";\r\nimport Home from \"../pages/home/home\";\r\nimport Note from \"../pages/note/note\";\r\nimport Friend from \"../pages/friend/friend\";\r\nimport Me from \"../pages/me/me\";\r\nimport Detail from \"../pages/detail/detail\";\r\nimport Publish from \"../pages/publish/publish\";\r\n\r\nexport const mainRoutes = [\r\n    {\r\n        path: '/main/home',\r\n        component: Home,\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/main/note',\r\n        component: Note,\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/main/friend',\r\n        component: Friend,\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/main/me',\r\n        component: Me,\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/main/detail',\r\n        component: Detail,\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/main/publish',\r\n        component: Publish,\r\n        exact: true,\r\n    },\r\n]\r\n\r\nconst routes = [\r\n    {\r\n        path: '/login',\r\n        component: Login,\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/main',\r\n        component: Main,\r\n        exact:false\r\n    }\r\n]\r\n\r\nexport default routes;","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport routes from \"./routes/index\";\nimport './App.css';\nexport default class App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          {routes.map((r) => {\n            return (\n              <Route\n                key={r.path}\n                path={r.path}\n                component={r.component}\n                exact={r.exact}\n              ></Route>\n            );\n          })}\n          <Redirect to=\"/login\"></Redirect>\n        </Switch>\n      </BrowserRouter>\n      // routes\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}